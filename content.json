[{"title":"基于STM32CUBEMX和PlatformIO的VSCode多平台开发环境搭建","date":"2022-03-30T14:33:23.000Z","path":"2022/03/30/基于STM32CUBEMX和platformio的VSCode开发环境搭建/","text":"抛弃Keil罢，这篇文章将会介绍如何使用VSCode中的PlatformIO插件来配置一个STM32的多平台开发环境。 前言博主本人并没有系统的学习过STM32的相关知识，此前接触的嵌入式相关内容也仅限于Arduino框架，因此这个环境是我入门STM32的第一个环境，我也尽了自己最大的努力来使这个环境尽可能的顺手，并且在能学习新东西的情况下保留我自己原有的开发习惯。写成了这个教程来供大家参考。由于水平有限，这篇难免有所不足，希望大家可以在评论区分享自己的看法。 模组这个开发环境分为以下几个部分 STM32CubeMX软件来生成STM32的初始化配置和程序框架，并且提供库文件 PlatformIO平台来提供各种外部库文件的安装，各种工具（下载工具、调试工具等）的配置和程序的编译环境 VSCode作为IDE的框架 CubeMX的安装与配置STM32CubeMX能够同时兼容Win、Mac和Linux三大平台，下载地址https://www.st.com/zh/development-tools/stm32cubemx.html现在的CubeMX已经不需要额外安装java运行环境了，能正常打开就算成功关于该软件，可以参考以下文章，在此不做过多介绍了STM32CubeMX介绍、下载与安装STM32CubeMX入门教程（一） platformIO的安装与配置安装打开VSCode，扩展商店搜索PlatformIO，安装即可 代理设置和许多其他工具一样，PlatformIO的主要坑就是国内的网络环境问题。在首次安装平台(Platform)时、新建工程时、编译时、上传时都会联网下载相关的软件包。并且大多数时候并没有关于下载进度的提示，导致很多时候会出现卡住的情况因此，设置代理时必要的，关于代理设置，不论是Win下还是Mac/Lin下，都是通过设置环境变量实现的可以参考 PlatformIO使用中遇到的坑 123456#Mac/Lin举例export HTTP_PROXY=http://127.0.0.1:1080/export HTTPS_PROXY=http://127.0.0.1:1080/#保险起见，同时设置以下两项export http_proxy=http://127.0.0.1:1080/export https_proxy=http://127.0.0.1:1080/ 你需要把这段代码加到.bashrc或者.zshrc中完成后通过以下命令测试 12curl http://google.comcurl https://google.com 均有获取到内容则成功 环境安装VSCode打开后点击下方蓝条的主页图标，或者左侧点击外星人图标再选择PIO Home-OPEN即可进入PlatformIO主页主页左侧，可以管理项目、库、开发板、和平台对于STM32开发，首先安装ST STM32Platform在Platform菜单，Embedded选项卡中搜索安装即可另外，安装也可以使用命令行进行（可以看到下载进度）左侧选项卡中，点击PlatformIO Core CLI，VSCode下方会打开PIO命令行 1pio platform install ststm32 即可 新建项目PIO Home，左侧Project菜单，新建项目根据你的开发需求选择对应的MCU或开发板，对于CubeMX生成的代码，选择CubeMX框架如果CubeMX已经生成好代码，项目名与Cube中项目名相同，项目目录为项目名文件夹的上层目录首次使用某MCU或者首次使用某框架，需要下载对应组件，需要挂上代理稍等（5分钟左右） 配置项目官方对于platformio.ini文件格式的文档 “platformio.ini” (Project Configuration File)项目新建后会自动打开，PIO的默认代码源文件在项目文件夹下的src目录，与CubeMX不同修改文件夹下的platformio.ini文件，新建一些配置项 123[platformio]src_dir = Core/Src include_dir = Core/Inc 然后尝试点击下方工具栏的勾号编译 上传程序默认的上传方式是STLink，即插即用，其他方式可以通过修改platformio.ini定义 12[env:xxxxxxxx] #在你对应的env部分中添加upload_protocol = cmsis-dap #支持的方式请见文档 点个灯试试以外置晶振的STM32F103C8T6为例，LED引脚PA8 生成框架打开CubeMX，进入MCU Selector，搜索并选择F103C8T6 在引脚配置中，选择对应引脚，单击配置为GPIO_Output模式右击引脚，设置UserLabel为LED左侧功能栏中，选择RCC，配置HSE为外部晶振，此外建议打开调试功能，选择对应的调试模式 下一步进入时钟配置，时钟树可改可不改，点个灯而已然后进入Project Manager，配置名称与路径，Toolchain选择Makefile 右上角GenerateCode，结束 PIO配置打开PIO Home，新建项目，选择MCU和Framework，目录与Cube相同 完成后打开工程，发现左侧已经有Core等文件夹，生成的代码已经导入了修改platformio.ini，尝试编译 写代码打开main.c，写入点灯代码找到main函数的while(1)循环，所有代码应写在对应的USER CODE BEGIN和USER CODE END注释之间 1234567891011121314/* USER CODE BEGIN WHILE */ while (1) &#123; HAL_GPIO_TogglePin(LED_GPIO_Port,LED_Pin); //翻转LED引脚的电平 //LED是你在cubemx中自定义的UserLabel名称，CubeMX会自动定义LED_Pin指向该引脚 HAL_Delay(1000); //延时1000ms /* USER CODE END WHILE */ /* USER CODE BEGIN 3 */ &#125; 编译上传，成功若没有在CubeMX中打开调试功能，能上传程序，但是只能上传一次，后续需要手动复位才能重新上传","tags":[{"name":"STM32","slug":"STM32","permalink":"https://acha666.cn/tags/STM32/"},{"name":"嵌入式","slug":"嵌入式","permalink":"https://acha666.cn/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F/"},{"name":"环境配置","slug":"环境配置","permalink":"https://acha666.cn/tags/%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"}]},{"title":"Klipper与KlipperScreen踩坑记","date":"2022-03-22T05:34:01.000Z","path":"2022/03/22/Klipper与KlipperScreen踩坑记/","text":"折腾Klipper固件、Moonraker、Fluidd和KlipperScreen安装时的踩坑日记 安装前的准备包管理器换源首先，软件包管理器的换源，加快下载依赖的速度，用什么源自己决定比如，Debian清华源或者 Debian中科大源 pip换源pip换源比包管理器更重要，同样加快下载python依赖的速度请注意避免用root账户操作，因为pip的配置文件每个用户独立，需与安装Klipper的用户一致 1234#新建pip.confmkdir ~/.piptouch ~/.pip/pip.confvi ~/.pip/pip.conf 文件内容 12[global]index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple 梯子如果有条件建议在完成以上两个步骤后直接挂梯子，建议局域网内一台电脑开启V2RAY或者SS的允许局域网内访问，然后完成 12export http_proxy=http://[电脑IP]:[端口]export https_proxy=http://[电脑IP]:[端口] 因为Git仓库除了改脚本很难直接换源，梯子是解决这个问题的最好办法 安装KiauhClone不下来就多试几次，当然也有镜像地址 1git clone https://hub.fastgit.xyz/th33xitus/kiauh 如果遇到执行kiauh.sh白屏掐住就掐掉多试几次 Klipper在执行上面两个换源后，除了clone应该都很顺利，Klipper的仓库地址可以在kiauh/scripts/install_klipper.sh的头部修改 Moonraker同上 fluiddfluidd的换源较为麻烦 Fluidd换源位置 KlipperScreen（曾经）最大的坑，没有之一以前的脚本安装依赖不全，会报错，需要根据错误提示手动补充依赖，已经修复 其他参考资料或许对你有帮助Bilibili up主 三三三三三文啊的系列专栏教程与视频【Klipper】OrangePi Zero安装Klipper 3D打印固件，替代树莓派【Klipper固件】主板固件编译及3D打印机配置【klipper固件】BL-touch配置，3D打印机调平及网床校准【Klipper固件】3D打印机共振补偿及压力推进补偿","tags":[{"name":"Linux","slug":"Linux","permalink":"https://acha666.cn/tags/Linux/"},{"name":"Klipper","slug":"Klipper","permalink":"https://acha666.cn/tags/Klipper/"},{"name":"3D打印","slug":"3D打印","permalink":"https://acha666.cn/tags/3D%E6%89%93%E5%8D%B0/"}]},{"title":"玩转Yubikey","date":"2021-07-07T10:34:30.000Z","path":"2021/07/07/玩转Yubikey/","text":"Yubikey关于GPG、SSH(Win下)、PIV、Windwos登录和FIDO2网站登录的教程 最近买了一个Yubikey 5 NFC，研究了不少时间，总算大致弄明白了 FIDO2 网站登录可谓是最基础的用途了，放一个我找到的能支持的网站列表 Microsoft个人账户(替代密码) Microsoft组织账户(替代密码) 需要先由管理员启用 Github(2FA) 先添加一个2FA方式，再启用安全密钥 Twitter(2FA) Cloudflare(2FA) Google(2FA) GPGGnuPG(GPG)是一个软件，可以用于文件、邮件和Commit等的加密、签名 Windows下：[Gpg4win]](https://gpg4win.org/download.html) Centos: yum install gpg -y Ubuntu: apt-get install gpg -y 建议阅读并了解：非对称加密算法、GPG简介:(简明 GPG 概念 - 知乎 (zhihu.com)) 建议：你需要创建一个主密钥和3个子密钥，子密钥分别只有加密、签名和认证功能，主密钥仅有签发子密钥功能。操作完成后将主密钥离线保存，仅使用子密钥进行操作。 创建密钥创建主密钥Windows下cmd，Linux下Bash操作 gpg --expert --full-generate 输出： 12345678910111213Please select what kind of key you want: (1) RSA and RSA (default) (2) DSA and Elgamal (3) DSA (sign only) (4) RSA (sign only) (7) DSA (set your own capabilities) (8) RSA (set your own capabilities) (9) ECC and ECC (10) ECC (sign only) (11) ECC (set your own capabilities) (13) Existing key (14) Existing key from cardYour selection? 选择8或11（出于兼容性问题建议8） 123456789Possible actions for a RSA key: Sign Certify Encrypt AuthenticateCurrent allowed actions: Sign Certify Encrypt (S) Toggle the sign capability (E) Toggle the encrypt capability (A) Toggle the authenticate capability (Q) FinishedYour selection? 先后输入S E 关闭主密钥的签名、加密功能，仅剩下Certify功能 此时显示Current allowed actions: Certify 输入Q 保存 12RSA keys may be between 1024 and 4096 bits long.What keysize do you want? (3072) 设定密钥长度，安装个人喜好即可，最长支持4096 1234567Please specify how long the key should be valid. 0 &#x3D; key does not expire &lt;n&gt; &#x3D; key expires in n days &lt;n&gt;w &#x3D; key expires in n weeks &lt;n&gt;m &#x3D; key expires in n months &lt;n&gt;y &#x3D; key expires in n yearsKey is valid for? (0) 设定有效期，0 为无限期 12345678910111213Key is valid for? (0) 0Key does not expire at allIs this correct? (y&#x2F;N) yGnuPG needs to construct a user ID to identify your key.Real name: Acha666Email address: acha@acha666.cnComment:You selected this USER-ID: &quot;Acha666 &lt;acha@acha666.cn&gt;&quot;Change (N)ame, (C)omment, (E)mail or (O)kay&#x2F;(Q)uit? 接下来输入你的姓名、邮箱，Comment注释可不填，最后输入O 确认 等待密钥生成，期间会要求设定一个密码来保护私钥 12345public and secret key created and signed.pub rsa4096 2021-07-09 [C] D37707A72D1D0B214CA3A1DA47E55EC6BE69F5F4uid Acha666 &lt;acha@acha666.cn&gt; 完成后，记下密钥指纹的后8位，比如这里是BE69F5F4 也可输入gpg -k 查看存在的密钥 创建子密钥输入gpg --expert --edit-key [你的密钥指纹后8位] 12345678Secret key is available.sec rsa4096&#x2F;47E55EC6BE69F5F4 created: 2021-07-09 expires: never usage: C trust: ultimate validity: ultimate[ultimate] (1). Acha666 &lt;acha@acha666.cn&gt;gpg&gt; 输入addkey 1234567891011121314gpg&gt; addkeyPlease select what kind of key you want: (3) DSA (sign only) (4) RSA (sign only) (5) Elgamal (encrypt only) (6) RSA (encrypt only) (7) DSA (set your own capabilities) (8) RSA (set your own capabilities) (10) ECC (sign only) (11) ECC (set your own capabilities) (12) ECC (encrypt only) (13) Existing key (14) Existing key from cardYour selection? 选择8 (Yubikey新版才支持ECC密钥储存) 我们先创建用于加密的子密钥，像刚才一样进行调整，直到Current allowed actions: Encrypt ，输入Q保存 接下来设定长度、有效期，最后输入y确定，过程中会要求你输入刚刚设定的密码 12345sec rsa4096&#x2F;47E55EC6BE69F5F4 created: 2021-07-09 expires: never usage: C trust: ultimate validity: ultimatessb rsa4096&#x2F;C8FBF2621A50F1F9 created: 2021-07-09 expires: never usage: E 可以看到多出ssb一栏，就是生成的子密钥 接下来重复两遍操作，生成用于签名和认证的子密钥 123456789sec rsa4096&#x2F;47E55EC6BE69F5F4 created: 2021-07-09 expires: never usage: C trust: ultimate validity: ultimatessb rsa4096&#x2F;C8FBF2621A50F1F9 created: 2021-07-09 expires: never usage: Essb rsa4096&#x2F;AE5B1CEB405B6D82 created: 2021-07-09 expires: never usage: Sssb rsa4096&#x2F;BC9E54467EE12DFB created: 2021-07-09 expires: never usage: A 最后输入save保存并退出 将密钥转移到Yubikey请注意：私钥一旦转移到Yubikey就会从电脑中被删除，且无法再被导出 可以先使用gpg --armor --export-secret-subkeys [你的密钥指纹后8位]导出它(但不建议) 首先插入Yubikey，gpg --edit-card 使用admin 命令开启管理模式 默认PIN: 123456 默认Admin PIN: 12345678 分别设置PIN, Admin PIN 和 PUK 可以用name命令设置你的姓名，其他信息也可以设置 退出card-edit模式，然后再gpg --expert --edit-key [你的密钥指纹后8位] 使用key 1选择一号子密钥，被选中的密钥会被用ssb*标记 输入keytocard导入密钥，请务必在导入时注意选择正确的槽位(slot) 三个功能不同的密钥与三个不同槽位对应 然后用key 1反选1号密钥，再对2号3号进行同样操作 导出主密钥在私钥被转移后，你电脑中的私钥相当于一个指针，指向Yubikey中的私钥，每次调用私钥都需要插上智能卡并输入PIN，必要时需要按压金属部分 首先导出子密钥的指针gpg --armor --export-secret-subkeys BE69F5F4 &gt; %userprofile%/Desktop/Secret_Subkeys 导出所有私钥gpg --armor --export-secret-keys BE69F5F4 &gt; %userprofile%/Desktop/Secretkeys 导出公钥gpg --armor --export BE69F5F4 &gt; %userprofile%/Desktop/Publickeys 完成后会在你的桌面生成三个文件 之后为了安全起见，请离线保存主密钥并从电脑中删除它 gpg --delete-secret-keys BE69F5F4 这会删除包括子密钥在内的所有私钥，所以你需要重新导入三个子密钥的指针 gpg --import [路径] 设置触摸我们可以设置每次调用卡内私钥都需要触摸Yubikey，这需要你首先安装YubiKey Manager 首先进入安装目录 1cd &quot;C:\\Program Files\\Yubico\\YubiKey Manager&quot; 使用命令 1234.\\ykman openpgp keys set-touch SIG FIXED.\\ykman openpgp keys set-touch ENC FIXED.\\ykman openpgp keys set-touch AUT FIXED.\\ykman openpgp keys set-touch ATT FIXED 即可 每次操作时，Yubikey上的灯会闪烁，这时就需要触摸Yubikey 测试Windows下可以使用自带的GUI客户端Kleopatra中的记事本 Linux下，使用gpg -r [密钥ID] -e [文件] 就可以使用公钥对文件加密，会生成一个.asc文件 使用gpg -d [文件]就可使用私钥解密文件 万一搞砸了… 重置Yubiikey1.\\ykman openpgp reset 谨慎使用，会删除所有私钥并将密码恢复到初始状态 Commit 签名进入Git Bash Windows下的特殊设置：设置GPG程序地址 1git config --global gpg.program \"/c/Program Files (x86)/GnuPG/bin/gpg.exe\" 设置签名密钥 1234git config --global user.signingkey [密钥ID]git config --global commit.gpgsign truegit config --global user.email [对应的邮箱]git config --global user.name [github] 完成后，在git commit时会自动进行签名，需要输入PIN和及时触碰Yubikey PIV智能卡","tags":[{"name":"评测","slug":"评测","permalink":"https://acha666.cn/tags/%E8%AF%84%E6%B5%8B/"},{"name":"Yubikey","slug":"Yubikey","permalink":"https://acha666.cn/tags/Yubikey/"},{"name":"GPG","slug":"GPG","permalink":"https://acha666.cn/tags/GPG/"}]},{"title":"安柏LCR数字电桥AT826开箱&拆解","date":"2020-07-29T05:19:50.000Z","path":"2020/07/29/安柏LCR数字电桥AT826开箱-拆解/","text":"新买了一个数字电桥AT826 不说废话直接上图 开箱外包装，一个箱子 打开之后 说明书&amp;检测报告 配件有一个开尔文测试夹，一个贴片测试夹和一些其他东西，还送了一个包 主机主机正面 主机背面 开机后 设置界面 可以选不同的测量参数 系统设置 随便找了一个电容 又随便找了一个电阻 3个0603贴片电阻0.1% 100R 25PPM（垃圾赠品）话说测这个的时候本来有5-6个的，但是夹飞了好几个。最后只好焊在板子上测了 电解电容 钽电容 因为没有精度比较高的基准，只能这样了 背部有脚撑 拆解拧下后面的电池盖电池，7.4V 1200mah,应该是两个3.7V串联 再拧下4个后盖螺丝，轻松打开内部总览，电池和测试端接口都是单独的小板 局部图(IC丝印拍的不够清楚，凑合看吧)还有看起来就很高级的亮闪闪的电容 主控，不认识 后壳贴有这种铝箔贴纸，主板上有弹簧与它接触，相当于屏蔽罩 背面就是按键和屏幕了，悄悄拆过没有电路，不放图了最后装回去了 那么就这样吧，谢谢捧场","tags":[{"name":"开箱","slug":"开箱","permalink":"https://acha666.cn/tags/%E5%BC%80%E7%AE%B1/"},{"name":"拆解","slug":"拆解","permalink":"https://acha666.cn/tags/%E6%8B%86%E8%A7%A3/"},{"name":"评测","slug":"评测","permalink":"https://acha666.cn/tags/%E8%AF%84%E6%B5%8B/"},{"name":"DIY","slug":"DIY","permalink":"https://acha666.cn/tags/DIY/"}]},{"title":"自制一块ESP8266开发板","date":"2020-06-09T10:30:04.000Z","path":"2020/06/09/自制一块ESP8266开发板/","text":"众所周知，ESP8266由于成本低、功能丰富，是最受欢迎的Wi-Fi模块之一。淘宝等地方所售卖的ESP8266开发板价格都较为昂贵，那么我们能不能试试自己制作一块ESP8266开发板呢？ PCB设计(如果你懒或者不会请直接跳过这一部分然后使用我已经画好的工程)由于8266芯片涉及到WIFI射频等方面，所以不建议大家直接使用ESP8266芯片进行设计。我们可以选择现成的WIFI模块直接使用。这种模块一般集成了Flash、天线等电路，大大简化了我们设计的步骤。这里以安信可ESP-12F为例。 资料下载:https://docs.ai-thinker.com/esp8266/docs我们所要做的就是设计 5V转3.3V供电(LDO) USB转串口模块(下载用) 把所有IO口引出或者根据需要进行设计(比如设计OLED屏等) 另外，设计时尽量把模块放在板边，天线部分挖空或者伸出板外，模块底部尽量不走线还有，模块底部的几个引脚是用不了的，悬空就好了 这里提供我已经做好的工程(使用立创EDA)，可供参考PS:其实也是基于某位大佬的文件改版的https://oshwhub.com/acha/ESP8266V2完成之后就可以交给板厂打样啦=￣ω￣=空板的样子（有点糊，凑合看吧） 焊接无需多说，你只需要一个好使的烙铁，一卷锡线，一管助焊膏，按照BOM表买好零件，肝就完事了这是焊接完成的样子 测试如果你和我一样使用CH340作为USB转串口模块，需要先下载安装驱动接下来把板子接上电脑，看看设备管理器里面是不是多出来一个新的串口？串口号记下要考！ 接下来我们要安装并且配置基本的开发环境（ArduinoIDE）https://www.arduino.cc/download_handler.php?f=/arduino-1.8.12-windows.exe官网是https://www.arduino.cc/en/Main/Software下载完成就直接安装。之后打开IDE，在文件-首选项里找到“附加开发板管理器网址”，输入http://arduino.esp8266.com/stable/package_esp8266com_index.json然后打开工具-开发板XXXXX-开发板管理器，搜索8266并安装 如果下载慢建议自己爬梯子解决或者先从https://github.com/esp8266/Arduino/releases/download/2.7.1/esp8266-2.7.1.zip下载，保存到C:\\Users\\你的用户名\\AppData\\Local\\Arduino15\\staging\\packages，再从管理器中安装，这样速度会快一些（用此方法需要在管理器中选择2.7.1版本，不一定是最新版）安装完成后，在菜单中选择对应的串口和开发板，就可以开始敲代码了 这里提供一个简单的LED闪烁代码，运行后板子上的LED会500ms闪烁一次。 123456789101112#define LED_PIN 2void setup()&#123; pinMode(LED_PIN,OUTPUT);&#125;void loop()&#123; digitalWrite(LED_PIN,HIGH); delay(500); digitalWrite(LED_PIN,LOW); delay(500);&#125; 代码中#define LED_PIN 2可以换成其他管脚，比如你的LED在GPIO5就是#define LED_PIN 5。GPIO2连接着ESP-12板载的蓝色LED。粘贴到编辑器中，使用Ctrl+U上传。运行效果 END这篇文章就是这样了，谢谢各位的观看。下期预告:使用ESP8266制作WIFI信号干扰器PCB文件https://oshwhub.com/acha/ESP8266V2","tags":[{"name":"DIY","slug":"DIY","permalink":"https://acha666.cn/tags/DIY/"},{"name":"ESP8266","slug":"ESP8266","permalink":"https://acha666.cn/tags/ESP8266/"},{"name":"PCB","slug":"PCB","permalink":"https://acha666.cn/tags/PCB/"},{"name":"物联网","slug":"物联网","permalink":"https://acha666.cn/tags/%E7%89%A9%E8%81%94%E7%BD%91/"}]},{"title":"Bandizip 7.06 专业&企业版","date":"2020-05-30T11:24:58.000Z","path":"2020/05/30/Bandizip-7-06-专业-企业版/","text":"第一篇软件类的文章，不知道会不会被寄律师函呢(笑) 简介众所周知，Bandizip是一款非常好用的软件什么你还不知道？无广告，免费，支持绝大多数压缩格式，便捷的拖放，清爽的界面……可是最近免费版被塞入了广告，而找(po)回(jie)密码功能又要专业版才能用屠龙勇者，终成恶龙是吗XD不废话了，补丁适用于Bandizip7.x,包括最新版7.06(至少在我写这句话时是这样)官方下载地址http://dl.bandisoft.com/bandizip.std/BANDIZIP-SETUP-STD-ALL.EXE博客分流 地址补丁x64 地址补丁x86 地址 说明补丁放到Bandizip安装目录，打开安装然后直接输入激活码激活企业版激活码00000000-ENT000000-0000000000-16210000专业版激活码20200614-PRO0D8E8DBDD86AE2518-16D9FEE4邮箱随便填一个即可","tags":[{"name":"软件","slug":"软件","permalink":"https://acha666.cn/tags/%E8%BD%AF%E4%BB%B6/"},{"name":"破解","slug":"破解","permalink":"https://acha666.cn/tags/%E7%A0%B4%E8%A7%A3/"},{"name":"Bandizip","slug":"Bandizip","permalink":"https://acha666.cn/tags/Bandizip/"}]},{"title":"如何科学的白嫖Office365","date":"2020-05-24T12:19:19.000Z","path":"2020/05/24/如何科学的白嫖Office365/","text":"众所周知，Office系列有Office2016,2019等一次买断的版本，也有Office365这个可以不断更新的版本。那么别问，问就是Office365更香。可是一年几百的价格着实有点让人劝退。本篇文章就将教大家如何科学的白嫖Office365。 首先，Office365订阅又大致可以分为个人订阅和组织订阅（名字是我自己起的qwq）个人订阅就是一年398/498的个人版/家庭版。组织订阅是由组织付费批量购买，然后分发给旗下的员工的。个人订阅不能嫖，组织订阅可以嫖（不要问我为什么）既然是白嫖，那肯定就是不花钱的咯（废话）。微软目前能够不花钱用Office365的条件不多，只有几个 教育版，即你要是学校（包括某大学、某中学之类的），而且最好要有校内.edu邮箱 非营利性组织版，顾名思义你要是非营利性组织，比如慈善组织之类的 你是“开发人员”傻子都知道第三种最好嫖啊，毕竟能点进这篇文章的估计也都不是什么小白吧，不管怎么说，或多或少也算个半吊子“开发者”吧Office开发人员计划官网即https://developer.microsoft.com/zh-CN/microsoft-365/dev-program 看到左下角了吗？“免费、可续订的 90 天 Microsoft 365 E5 开发人员订阅”，懂我意思吧？其他的什么“示例数据包”都是没用的东西，不用管，只管嫖就完事了教程注册&amp;获取订阅首先打开网站PS:如果打开很慢的话请自备上网工具然后点那个大大的立即加入，在新页面中使用一个Microsoft账户登录（个人账户）如图填写一些基本信息，尤其是组织名称好像以后改不了国家选项貌似会影响后续OneDrive的存储位置 接下来选择一些选项，随便选即可，或者全勾上也行 接下来就可以开始设置订阅了，点击”设置订阅“按钮 在窗口中填写对应的信息用户名就是注册后第一个全局管理员的用户名域名尽量取简单、好记的如图填写，那么创建后用户名就是acha@achae5.onmicrosoft.com 接下来需要手机短信验证，随便拿一个手机就行，只是防止机器人用如果点击发送没反应，或者提示无法连接reCAPTCHA,那么请自行搬梯子 搬梯子后即可正常获取 接下来订阅就获取完成了 管理订阅&amp;创建账号打开portal.office.com,登录你刚刚创建的账号 如果你的目的就是白嫖一个人的3个月的Office，那么右上角安装Office，然后就可以关闭本文章了如果想要多嫖一点(嫖25个)或者多嫖几年，那么请继续看 点击管理，进入管理控制台，左边的用户——活跃用户，再点击添加用户 填写对应项目,下一步 分配许可证，勾上E5项目即可 如果要创建管理员用户可以修改，管理员用户可以登录你现在登录的控制台，并执行创建用户等操作注意:管理员可以任意删除/读取旗下用户的Onedrive数据，更改用户的密码(不能直接读取密码)故请注意隐私 最后确认即可之后就可以使用这个账号登录portal.office.com安装office了配置Onedrive默认的Onedrive只有1T空间，需要手动扩容到5T左边所有管理中心——Onedrive管理中心 存储——默认存储，改为5120GB即可(记得保存) 绑定域名默认域名是xxx.onmicrosoft.com，又臭又长，如果你有自己的域名可以绑定并且修改左边菜单展开所有项目，选择设置——域点击“添加域” 按照提示输入域名 按提示添加对应DNS记录（都有域名了要是这还不会就别用了） 最后验证、确认即可，已经创建完成的用户需要去用户面板修改一下用户名保持活跃第一次的订阅只有92天（三个月），你需要证明自己是开发者才可以续期方法比较简单，推荐使用OneIndex之类的东西，因为这会涉及到关于API的操作或者也可以试试访问Azure服务，不知道好使不好使，详见本博客文章如何科学的白嫖Azure网络上也流传调用Outlook API可以续期，我是三种方法都在使用，目前已经续期两次如果方法正确，一般在订阅剩下刚好30天（左右）的时候会被自动续期，会有邮件发送到你的Mircosoft个人账户邮箱（用于在第一步注册的邮箱）","tags":[{"name":"白嫖","slug":"白嫖","permalink":"https://acha666.cn/tags/%E7%99%BD%E5%AB%96/"},{"name":"Office365","slug":"Office365","permalink":"https://acha666.cn/tags/Office365/"}]},{"title":"如何科学的白嫖Azure","date":"2020-05-23T06:38:33.000Z","path":"2020/05/23/如何科学的白嫖Azure/","text":"众所周知，微软的Azure和亚马逊AWS都有新用户试用一年的活动。亚马逊AWS估计很多人已经在嫖了，那么这篇文章就向大家介绍一下微软Azure的白嫖方法已经注意事项（坑点） 首先，我们了解一下Azure能白嫖到什么。首先是200美刀的免费额度，只有第一个月可用，30天后会过期还有可供12个月免费使用的2部虚拟机（与那种只能跑网页的虚拟主机不同，就是云服务器）其他服务似乎也用不到，就不讲了。 正式教程注册&amp;绑定信用卡由于我之前已经注册过，但是没有截图，这部分就不放图了。这部分非常简单，你只需要前往这儿，使用你的Microsoft账户登录（没有的话可以注册一个），并且按照指引完成验证即可还有，如果有人怕被莫名其妙扣款的，可以试着拿一张虚拟信用卡/预付费卡注册备注：微软的大部分网页在国内都比较卡，所以有条件的各位建议自备“工具”注册完成后，需要配置订阅并把订阅类型改成“即用即付订阅” 开始配置虚拟机上面的部分都不是重点，因为按照指引是人都会。那么接下来开始重点讲解，因为稍微操作不当都会导致踩坑然后信用卡被扣款。 首先在portal.azure.com就是控制台首页，选择虚拟机 然后选择左上角的添加，进入添加页面 第一个订阅，选择你刚刚创建的订阅，然后资源组没有就创建一个，名字啥的无所谓，有就选现有的虚拟机名称也无所谓，区域选项决定了你这个主机的位置，比如东亚就是香港。如果是linux虚拟机，映象这栏选对应的就行了如果是Windows虚拟机，一定要选择浏览所有公用和专用映象，然后搜索smalldisk(如果搜索smalldisk找不到就搜索datacenter,往下拉)，选择smalldisk版的镜像 然后一定要更改虚拟机大小，选择B1s，其他型号会被收费 底下的管理员账户密码自己设置，就是你使用ssh/rdp登录的用户密码如果是Windows镜像，已拥有 Windows 服务器许可证这项不要选是，否则计费会按照Linux虚拟机计费 这个页面设置好就可以选“查看+创建”了。磁盘和网络等选项可以不需要修改，如果要修改选下一步就行 在新打开的页面里确认信息，然后就可以点“创建”按钮了等待一段时间，让它部署完成 然后点击“转到资源”接下来的步骤很重要，不管你选择的操作系统是什么，都先停止这个虚拟机 注意不要勾选保留IP地址，不然会变成静态IP然后被扣费 停止需要一小会儿时间，可以在右上角看到虚拟机是否已经停止 然后选择左边的“磁盘”，点击磁盘的名称 在打开的新页面中，选择“配置”，把磁盘大小改成64并且保存（如果Windows一开始没有选择smalldisk版镜像，此处默认磁盘大小为128，无法改小只能扩容）接下来就可以回到虚拟机页面了最后一步是开放网络安全组，说白了就是防火墙。在没有开放的情况下你是ping不通主机的 选择左边的“网络”,分别添加入站规则和出站规则。或者像下图开放所有端口（不推荐，安全性差一些） 全部配置完成，就可以使用SSH/RDP连接到服务器啦~IP地址在概览页面有显示 删除虚拟机如果要删除一部虚拟机，由于Azure比较复杂（坑），所有需要连带着所有硬盘、IP等一起删除，不然会单独计费. 在主页点“所有资源”，然后选中对应的虚拟机、磁盘、网络接口、安全组四项再删除 Tips 虚拟机大小要注意，除了B1s其他都要付钱 只有64GB的P6磁盘不用付费，32G和128G的都要付费 动态IP地址不用付费，但是每次停止虚拟机再开启时会变化。静态的要付费 免费套餐使用量以及送的200USD剩余量可以去“订阅”选项里面看","tags":[{"name":"白嫖","slug":"白嫖","permalink":"https://acha666.cn/tags/%E7%99%BD%E5%AB%96/"},{"name":"Azure","slug":"Azure","permalink":"https://acha666.cn/tags/Azure/"},{"name":"云服务","slug":"云服务","permalink":"https://acha666.cn/tags/%E4%BA%91%E6%9C%8D%E5%8A%A1/"},{"name":"服务器","slug":"服务器","permalink":"https://acha666.cn/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"}]},{"title":"使用Cloudflare配置IPV4和IPV6的动态DNS(DDNS)","date":"2020-05-10T07:47:33.000Z","path":"2020/05/10/使用Cloudflare配置IPV4和IPV6的动态DNS-DDNS/","text":"基于Cloudflare API的动态DNS(DDNS)Shell脚本 为什么要写这个家里的网络环境是电信200M光纤，虽然很容易的拿到了公网IP，但是IP的变换速度很不规则。所以需要做DDNS实时把IP解析到自己的域名上。之前一直用DnsPod的免费版，好处是群晖的控制面板可以直接进行配置。最近由于做博客的需求，把NS记录改成了Cloudflare的以方便使用他家提供的CDN。那么问题就来了，群晖NAS本身不支持CF的DDNS服务，再加上网络上许多介绍Cloudflare DDNS脚本的文章没法用或者写的不详细。自己在aipeach/cloudflare-api-v4-ddns的基础上做了一些修改，产生了这篇文章。 更新2020.5.23更新，修复了由于CloudflareAPI修改导致的脚本提示错误，但实际修改记录成功的bug。 首先，我也不经常写linux脚本，所以对于.sh文件就像看天书一样XD，通过查找很多资料然后添加断点，找出了原因：没有办法正常获取解析记录ID（在官方文档里面叫Record ID）,初步感觉应该是脚本过于老旧，但是CloudflareAPI经常更新的缘故。那么就有两个解决办法，直接手动获取Record ID填进去，或者改脚本。但是Record ID这东西貌似删除记录然后重新创建就会变动，到时候要重新获取，就很麻烦，所以我采用了一劳永逸的办法。顺便给脚本加入了日志功能，把整个脚本汉化了一遍然后修复了一些小bug。 那么要怎么用呢？首先下载这个脚本，如果你在linux环境下，且有条件“面对国内网络环境”，可以使用这个命令使用它的前提是你有安装curl，如何安装curl 1curl https://raw.githubusercontent.com/acha666/cloudflare-api-v4-ddns/master/cf-v4-ddns.sh &gt; /usr/local/bin/cf-ddns.sh &amp;&amp; chmod +x /usr/local/bin/cf-ddns.sh 或者通过我的博客下载（可能不会是最新版） 1curl https://acha666.cn/contents/cloudflare-api-v4-ddns/cf-v4-ddns.sh &gt; /usr/local/bin/cf-ddns.sh &amp;&amp; chmod +x /usr/local/bin/cf-ddns.sh 在Windows环境下可以去我的项目地址直接下载然后打开这个脚本，需要手动配置的地方已经使用注释标出 12345678910111213141516171819202122232425262728293031323334353637383940414243444546# 你的Global API Key, 请见 https://dash.cloudflare.com/profile/api-tokens,# 如果填写错误会造成请求错误CFKEY=\"b8c657a9b6ca96ba9babfdd9fa8bfa9dba9bf\"# Cloudflare登录邮箱, 例如: user@example.comCFUSER=\"username@example.com\"# 主域名，即二级域名，或者说站点名称, 例如: example.comCFZONE_NAME=\"example.com\"# 想要进行ddns的域名, 例如: homeserver.example.com，也可以是二级域名如 example.com# 请分别设置用于IPv4 DDNS 和 IPv6 DDNS 的域名。# 当然，两者可以相同也可以其中一个不填（如果你用不着其中一项的话）CFRECORD_NAMEV4=\"ddns.example.com\"CFRECORD_NAMEV6=\"ddnsv6.example.com\"# 记录类型, A(IPv4)|AAAA(IPv6), 默认 IPv4CFRECORD_TYPE=\"A\"# TTL设置, 在 120 和 86400 秒之间CFTTL=120# 忽略本地ip文件，强制更新记录FORCE=false# 用于获取公网IP的地址, 可以换成其他的比如: bot.whatismyipaddress.com, https://api.ipify.org/ ...# 请分别设置用于IPv4 DDNS 和 IPv6 DDNS 的参数。# 当然，两者可以相同也可以其中一个不填（如果你用不着其中一项的话）WANIPSITEV4=\"http://ipv4.icanhazip.com\" WANIPSITEV6=\"http://ipv6.icanhazip.com\" # 这个文件将会存储你的zoneid和recordid等信息，可以是绝对路径或者相对路径# 请分别设置用于IPv4 DDNS 和 IPv6 DDNS 的路径。# 当然，两者可以相同也可以其中一个不填（如果你用不着其中一项的话）ID_FILEV4=\"cloudflare.v4.ids\" ID_FILEV6=\"cloudflare.v6.ids\"# 这个文件将会在每一次IPv4地址变更后存储下当前IP，作为对比# 请分别设置用于IPv4 DDNS 和 IPv6 DDNS 的路径。# 当然，两者可以相同也可以其中一个不填（如果你用不着其中一项的话）WAN_IP_FILEV4=\"ipv4.txt\"WAN_IP_FILEV6=\"ipv6.txt\"# 日志文件路径，分别是IPv4和IPv6，可以为同一个，不会互相覆盖LOG_FILEV4=\"cf_ddns.log\"LOG_FILEV6=\"cf_ddns.log\" 当然，你也可以选择不使用默认配置，在shell中用参数提供这些信息 123456# 用法:# cf-ddns.sh -k &lt;你的cloudflare api key&gt; \\# -u &lt;Cloudflare登录邮箱&gt; \\# -h &lt;host.example.com&gt; \\ # 你想要DDNS的完整域名# -z &lt;example.com&gt; \\ # 主域名，即二级域名，或者说站点名称# -t &lt;A|AAAA&gt; # IPv4模式或者IPv6模式；默认IPv4 配置完成后，运行bash cf-ddns.sh即可 设置crontab计划任务十分简单，首先输入crontab -e然后在文件中添加新的一行 1*/1 * * * * \"/usr/local/bin/cf-ddns.sh\" &gt;/dev/null 2&gt;&amp;1 这样将会每分钟执行一次这个脚本。把*/1改成*/10就是每10分钟执行一次。如果你改变了cf-ddns.sh的所在位置，相应的，你也要把/usr/local/bin/cf-ddns.sh改变成正确的目录。当然，你也可以在cf-ddns.sh之后添加相应的参数。不过，如果你和我一样使用群晖,只需要在控制面板-计划任务中添加新项目，然后设置好时间就行 注意事项1.不能同时存在两个记录名相同的记录(比如一个example.com的A记录和example.com的MX记录)，会发生错误已经修复这个蛋疼的问题，现在有100个也没问题（话说哪里来的100种类型的记录啊= =）2.脚本只在群晖DSM和Centos环境下测试，不过Ubuntu之类的也应该可以跑吧3.如果要使用IPv6模式，当然首先你要保证你能够正常访问IPv6网站啦~测试一下吧4.貌似没有了，因为我能发现的问题都修复完了 要是还是有BUG怎么办？看下面↓↓↓，给我留言就好，有人回复你时你会收到邮件提醒。或者你也可以选择提交Issue，不过可能没那么快得到回复","tags":[{"name":"Linux","slug":"Linux","permalink":"https://acha666.cn/tags/Linux/"},{"name":"DDNS","slug":"DDNS","permalink":"https://acha666.cn/tags/DDNS/"},{"name":"Shell","slug":"Shell","permalink":"https://acha666.cn/tags/Shell/"},{"name":"API","slug":"API","permalink":"https://acha666.cn/tags/API/"}]},{"title":"从现在开始，这个博客叫做Acha's Blog","date":"2020-05-01T04:00:00.000Z","path":"2020/05/01/从现在开始，这个博客叫做Acha-s-Blog/","text":"2020年5月1日，恰好是劳动节,Acha’s Blog正式上线 关于这个博客如你所见，这个博客使用Hexo搭建，是一个静态博客它和网上烂大街的很多博客一样，将会在以后（有生之年）发布一些技术类的文章。 关于它的主人是一位苦逼学生，一天到晚就知道研究这些有的没的，心思都不在学习上 鸣谢这个博客的搭建使用了不少项目和现成的框架，链接在下面给出博客总体框架: Hexo以及部分的Hexo插件 hexo-deployer-git hexo-generator-archive hexo-generator-baidu-sitemap hexo-generator-category hexo-generator-feed hexo-generator-index hexo-generator-json-content hexo-generator-sitemap hexo-generator-tag hexo-helper-qrcode hexo-renderer-ejs hexo-renderer-less hexo-renderer-marked hexo-renderer-stylus hexo-server博客使用的主题：indigo评论区：Valine+leancloud评论管理：DesertsP/Valine-Admin左下角Live2D看板娘：stevenjoezhang/live2d-widget服务器：Github PagesCDN：Cloudflare许可协议博客内容除特殊说明外遵循知识共享 署名 - 非商业性 - 相同方式共享 4.0 国际协议","tags":[{"name":"博客","slug":"博客","permalink":"https://acha666.cn/tags/%E5%8D%9A%E5%AE%A2/"}]}]